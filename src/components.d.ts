/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface KpAvatar {
    'alt': string;
    'img': string;
    'isDefault': boolean;
    'isLarge': boolean;
    'isMedium': boolean;
    'isSmall': boolean;
    'name': string;
  }
  interface KpAvatarGroup {}
  interface KpColorChip {
    'color': string;
  }
  interface KpColorRibbon {
    'colorHex': string;
    'colorName': string;
    'colorRgb': string;
    'colorWeight': string;
    'isCard': boolean;
  }
  interface KpDataRibbon {
    'dataAvatarUrl': string;
    'dataHeading': string;
  }
  interface PlaceholderColorRibbon {}
}

declare global {


  interface HTMLKpAvatarElement extends Components.KpAvatar, HTMLStencilElement {}
  const HTMLKpAvatarElement: {
    prototype: HTMLKpAvatarElement;
    new (): HTMLKpAvatarElement;
  };

  interface HTMLKpAvatarGroupElement extends Components.KpAvatarGroup, HTMLStencilElement {}
  const HTMLKpAvatarGroupElement: {
    prototype: HTMLKpAvatarGroupElement;
    new (): HTMLKpAvatarGroupElement;
  };

  interface HTMLKpColorChipElement extends Components.KpColorChip, HTMLStencilElement {}
  const HTMLKpColorChipElement: {
    prototype: HTMLKpColorChipElement;
    new (): HTMLKpColorChipElement;
  };

  interface HTMLKpColorRibbonElement extends Components.KpColorRibbon, HTMLStencilElement {}
  const HTMLKpColorRibbonElement: {
    prototype: HTMLKpColorRibbonElement;
    new (): HTMLKpColorRibbonElement;
  };

  interface HTMLKpDataRibbonElement extends Components.KpDataRibbon, HTMLStencilElement {}
  const HTMLKpDataRibbonElement: {
    prototype: HTMLKpDataRibbonElement;
    new (): HTMLKpDataRibbonElement;
  };

  interface HTMLPlaceholderColorRibbonElement extends Components.PlaceholderColorRibbon, HTMLStencilElement {}
  const HTMLPlaceholderColorRibbonElement: {
    prototype: HTMLPlaceholderColorRibbonElement;
    new (): HTMLPlaceholderColorRibbonElement;
  };
  interface HTMLElementTagNameMap {
    'kp-avatar': HTMLKpAvatarElement;
    'kp-avatar-group': HTMLKpAvatarGroupElement;
    'kp-color-chip': HTMLKpColorChipElement;
    'kp-color-ribbon': HTMLKpColorRibbonElement;
    'kp-data-ribbon': HTMLKpDataRibbonElement;
    'placeholder-color-ribbon': HTMLPlaceholderColorRibbonElement;
  }
}

declare namespace LocalJSX {
  interface KpAvatar {
    'alt'?: string;
    'img'?: string;
    'isDefault'?: boolean;
    'isLarge'?: boolean;
    'isMedium'?: boolean;
    'isSmall'?: boolean;
    'name'?: string;
  }
  interface KpAvatarGroup {}
  interface KpColorChip {
    'color'?: string;
  }
  interface KpColorRibbon {
    'colorHex'?: string;
    'colorName'?: string;
    'colorRgb'?: string;
    'colorWeight'?: string;
    'isCard'?: boolean;
  }
  interface KpDataRibbon {
    'dataAvatarUrl'?: string;
    'dataHeading'?: string;
  }
  interface PlaceholderColorRibbon {}

  interface IntrinsicElements {
    'kp-avatar': KpAvatar;
    'kp-avatar-group': KpAvatarGroup;
    'kp-color-chip': KpColorChip;
    'kp-color-ribbon': KpColorRibbon;
    'kp-data-ribbon': KpDataRibbon;
    'placeholder-color-ribbon': PlaceholderColorRibbon;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'kp-avatar': LocalJSX.KpAvatar & JSXBase.HTMLAttributes<HTMLKpAvatarElement>;
      'kp-avatar-group': LocalJSX.KpAvatarGroup & JSXBase.HTMLAttributes<HTMLKpAvatarGroupElement>;
      'kp-color-chip': LocalJSX.KpColorChip & JSXBase.HTMLAttributes<HTMLKpColorChipElement>;
      'kp-color-ribbon': LocalJSX.KpColorRibbon & JSXBase.HTMLAttributes<HTMLKpColorRibbonElement>;
      'kp-data-ribbon': LocalJSX.KpDataRibbon & JSXBase.HTMLAttributes<HTMLKpDataRibbonElement>;
      'placeholder-color-ribbon': LocalJSX.PlaceholderColorRibbon & JSXBase.HTMLAttributes<HTMLPlaceholderColorRibbonElement>;
    }
  }
}


