$context-px: 16 !default;
$breakpoint-width: 1440 !default;
$breakpoint-height: 900 !default;

//
// Pixels to Em
//
@function em($px, $context: $context-px) {
  @return ($px / $context) * 1em;
}

//
// Pixels to Rem
//
@function rem($px, $context: $context-px) {
  @return ($px / $context) * 1rem;
}

//
// Unit-less
//
@function unit-less($px, $context: $context-px) {
  @return ($px / $context);
}

//
// Pixels to Percentage
//
@function percent($px, $context) {
  @return percentage($px / $context);
}

//
// Pixels to Viewport Width
//
@function vw($px) {
  $target: $px * 1px;
  $vw-context: ($breakpoint-width * 0.01) * 1px;
  @return ($target / $vw-context) * 1vw;
}

//
// Pixels to Viewport Height
//
@function vh($px) {
  $target: (100 * $px);
  $vh-context: ($breakpoint-height * 0.01) * 1px;
  @return ($target / $breakpoint-height) * 1vh;
}

//
// Strip unit
//
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

//
// Fluid font sizes (Responsive)
//
@mixin fluid-type($min-font-size, $max-font-size, $min-line-height: $min-font-size, $max-line-height: $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);
  $u5: unit($min-line-height);
  $u6: unit($max-line-height);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 and $u1 == $u5 and $u1 == $u6 {
    & {
      font-size: $min-font-size;
      line-height: $min-line-height;

      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
        line-height: calc(
          #{$min-line-height} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }

      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
        line-height: $max-line-height;
      }
    }
  }
}

@mixin width($min-width, $max-width) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-width);
  $u4: unit($max-width);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      width: $min-width;

      @media screen and (min-width: $min-vw) {
        width: calc(
          #{$min-width} + #{strip-unit($max-width - $min-width)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }

      @media screen and (min-width: $max-vw) {
        width: $max-width;
      }
    }
  }
}

@mixin height($min-height, $max-height) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-height);
  $u4: unit($max-height);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      height: $min-height;

      @media screen and (min-height: $min-vw) {
        height: calc(
          #{$min-height} + #{strip-unit($max-height - $min-height)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }

      @media screen and (min-height: $max-vw) {
        height: $max-height;
      }
    }
  }
}
